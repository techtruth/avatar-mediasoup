name: Production Deployment for Frame

on:
  push:
    branches:
      - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  webapp:
    uses: ./.github/workflows/module-webapp-aws.yml
    needs: dockers
    with:
      S3BaseName: framevr.io
      MainlineBuildCommand: "build"
      QuickBuildCommand: "build:quick"
      enableMainline: true
      enableMainlineSourcemaps: true
      enableQuick: true
      enableCompression: true
      ImmersServer: "https://i.framevr.io"
      BrandingName: "Frame"
      HomeRedirect: '"https://learn.framevr.io"'
      OutLink: "https://framevr.io"
      MetaImage: "https://framevr.io/assets/meta-image.png"
      FirebaseAPIKey: "AIzaSyA-DHy62a8kLOGahywbTmIynXRxQ9XFT0k"
      Description: "Immersive presentations and meetings - right from the browser on desktop, mobile, and VR"
      ShortDescription: "FRAME is a space for immersive presentations and meetings - right from a browser"
      FirebaseProjectID: "frame-vr"
      FirebaseMessagingSenderId: "19282186447"
      FirebaseAppId: "1:19282186447:web:aa9609a7cd67573d8e67ba"
      GoogleClientId: "19282186447-eo9sfdpsj9arhl5mqrt23llin64g6tr5.apps.googleusercontent.com"
      CloudinaryUploadPreset: "nbwxlqkc"
      Plausible: "framevr.io"
      QuickHelpMainId: "63e10679a84cb3206267dfd8"
      QuickHelpGroupId: "ZAvHnj6NyurYNZH6t"
    secrets:
      AWS_KEY_ID: ${{ secrets.PRODUCTION_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
      MainlineCloudfrontDistribution: ${{ secrets.PRODUCTION_MAINLINE_CLOUDFRONT }}
      QuickCloudfrontDistribution: ${{ secrets.PRODUCTION_QUICK_CLOUDFRONT }}

  dockers:
    uses: ./.github/workflows/module-dockers-aws.yml
    with:
      AWSRegion: us-east-1
    secrets:
      AWS_KEY_ID: ${{ secrets.PRODUCTION_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

  awsecs-common:
    uses: ./.github/workflows/module-ecs-common-aws.yml
    needs: dockers
    with:
      AWSECR: 715653632582
      AWSRegion: us-east-1
    secrets:
      AWS_KEY_ID: ${{ secrets.PRODUCTION_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

  awsecs-regional:
    uses: ./.github/workflows/module-ecs-regional-aws.yml
    needs: dockers
    with:
      AWSECR: 715653632582
      AWSRegion: "['us-east-1', 'eu-central-1', 'ap-east-1', 'ap-south-1', 'sa-east-1', 'ap-southeast-1', 'ap-southeast-2', 'ap-northeast-1']"
    secrets:
      AWS_KEY_ID: ${{ secrets.PRODUCTION_AWS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}

  healthcheck:
    runs-on: ubuntu-latest
    needs:
      - webapp
      - awsecs-common
      - awsecs-regional

    steps:
      - name: Webapp Health Check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://framevr.io
          follow-redirect: true
          max-attempts: 15
          retry-delay: 15s
      - name: API Health Check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://api.framevr.io/uptime
          follow-redirect: true
          max-attempts: 15
          retry-delay: 15s
      - name: Immers server Health Check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://i.framevr.io/auth/login
          max-attempts: 15
          retry-delay: 15s
          retry-all: true
