name: Microsoft Teams Bespoke Build and Deploy - Docker

on:
  push:
    tags: [msteams]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Build in development mode using docker
        run: |
          docker-compose --file docker/docker-compose.yml run --user root --entrypoint "/bin/bash -c 'npm install --no-optional && npm run build:msteams'" api
      - name: Preserve built front end
        uses: actions/upload-artifact@v3
        with:
          name: dist-bespoke-msteams
          path: |
            frame/webapp/dist/
          retention-days: 5
          if-no-files-found: error
      - name: Preserve build reproducibility
        uses: actions/upload-artifact@v3
        with:
          name: build-lock
          path: |
            frame/package-lock.json
          retention-days: 5
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Retrieve previously built front-end
        uses: actions/download-artifact@v3
        with:
          name: dist-bespoke-msteams
          path: frame/webapp/dist

      - name: Upload webapp to s3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete --exclude index.html
        env:
          AWS_S3_BUCKET: msteams.framevr.io
          AWS_ACCESS_KEY_ID: ${{ secrets.MIGRATE_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MIGRATE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          SOURCE_DIR: frame/webapp/dist

      - name: Upload webapp index.html (no-cache) to s3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete --cache-control 'no-cache, s-maxage=86400' --include index.html
        env:
          AWS_S3_BUCKET: msteams.framevr.io
          AWS_ACCESS_KEY_ID: ${{ secrets.MIGRATE_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MIGRATE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          SOURCE_DIR: frame/webapp/dist

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Front end Health Check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://msteams.framevr.io
          follow-redirect: true
          max-attempts: 5
          retry-delay: 15s
